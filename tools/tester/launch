#!/usr/bin/env zsh

# This script shall:
# Compare the status line of a new request with the expected response

# ============================================================================ #
#                             Global variables                                 #
# ============================================================================ #

EOC="\e[0m"
BOLD="\e[1m"
RED="\e[91m"
GREEN="\e[92m"
YELLOW="\e[93m"
DBLUE="\e[94m"
PURPLE="\e[95m"
CYAN="\e[96m"
DGREY="\e[1;90m"

www_path="/tmp/www"
www_src_path="../docker_nginx/www"

# ============================================================================ #
#                                 Functions                                    #
# ============================================================================ #

function ft_exit() {
    >&2 echo $*
    exit 1
}

function emojibool () {
    # 1=bool
    [ "$1" = "0" ] && echo "${GREEN}✅${EOC}" || echo "${RED}❌${EOC}";
}

function is_equal () {
    # 1=first_element; 2=second_element;
    [ "$1" = "$2" ] && echo 0 || echo 1
}

function pline () {
    # 1=testname; 2=bool
    printf "%-26s: $(emojibool $2)\n" $1
}

function pdiff () {
    # 1=src; 2=color; 3=line
    1="$1:"
    printf "%-8s$2" "$1"
    printf "$3" | cat -e
    printf "${EOC}\n"
}

function check_one() {
    if [ $# -lt 1 ] || [ $# -gt 3 ]; then
        ft_exit "Usage: $0 <file.req> [port=80] [ip=localhost]"
    elif ! [ -e "$1" ]; then
        ft_exit "File does not exist: $1"
    elif ! [ -s "$1" ]; then
        ft_exit "Empty file: $1"
    fi

    if [ -z "$2" ]; then 2="80"; fi
    if [ -z "$3" ]; then 3="localhost"; fi

    pathtestname="$(echo $1 | cut -d '.' -f1)" # w/o ext
    file_resp="${pathtestname}.resp"

    testtype="$(echo ${pathtestname} | cut -d '/' -f 2)"
    testname="$(echo ${pathtestname} | cut -d '/' -f 3-)"
    tmpfile="${testtype}.${testname}.${RANDOM}.out"

    if ! [ -e "$file_resp" ] || ! [ -s "$file_resp" ]; then
        echo "${PURPLE}Resp file empty or missing for test: $testname${EOC}";
        return 1
    fi

    if ! [ -d "$www_path" ]; then
        rm -rf $www_path && mkdir $www_path
    fi
    cp -rf $www_src_path/* $www_path
    $www_path/run.sh $www_path

    nc $3 $2 < $1 > $tmpfile &
    sleep 0.3
    pkill nc &> /dev/null

    custom_statusline="$(head -n1 $tmpfile)"
    true_statusline="$(head -n1 $file_resp)"

    rm -f $tmpfile

    res=$(is_equal "$custom_statusline" "$true_statusline")
    pline $testname $res

    if [ "$res" != "0" ]; then
        pdiff "HAVE" "$RED" "$custom_statusline"
        pdiff "EXPECT" "$GREEN" "$true_statusline"
    fi

}

if [ "$SHLVL" = "2" ]; then
    check_one $*
fi
